{
  "name": "connect-stream-s3",
  "description": "Streaming connect middleware for uploading files to Amazon S3.",
  "version": "0.3.0",
  "author": {
    "name": "Andrew Chilton",
    "email": "chilts@appsattic.com",
    "url": "http://www.chilts.org/"
  },
  "homepage": "https://github.com/appsattic/connect-stream-s3",
  "contributors": [],
  "devDependencies": {},
  "dependencies": {
    "awssum": "~0.5.0",
    "async": "~0.1.18"
  },
  "main": "connect-stream-s3.js",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/appsattic/connect-stream-s3.git"
  },
  "bugs": {
    "url": "http://github.com/appsattic/connect-stream-s3/issues",
    "mail": "chilts@appsattic.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/appsattic/connect-stream-s3/raw/master/LICENSE"
    }
  ],
  "keywords": [
    "express",
    "connect",
    "middleware",
    "amazon",
    "s3"
  ],
  "readme": "```\n _______  _______  _        _        _______  _______ _________\n(  ____ \\(  ___  )( (    /|( (    /|(  ____ \\(  ____ \\\\__   __/\n| (    \\/| (   ) ||  \\  ( ||  \\  ( || (    \\/| (    \\/   ) (   \n| |      | |   | ||   \\ | ||   \\ | || (__    | |         | |   \n| |      | |   | || (\\ \\) || (\\ \\) ||  __)   | |         | |   \n| |      | |   | || | \\   || | \\   || (      | |         | |   \n| (____/\\| (___) || )  \\  || )  \\  || (____/\\| (____/\\   | |   \n(_______/(_______)|/    )_)|/    )_)(_______/(_______/   )_(   \n                                                               \n\n            _______ _________ _______  _______  _______  _______ \n           (  ____ \\\\__   __/(  ____ )(  ____ \\(  ___  )(       )\n           | (    \\/   ) (   | (    )|| (    \\/| (   ) || () () |\n     _____ | (_____    | |   | (____)|| (__    | (___) || || || |\n    (_____)(_____  )   | |   |     __)|  __)   |  ___  || |(_)| |\n                 ) |   | |   | (\\ (   | (      | (   ) || |   | |\n           /\\____) |   | |   | ) \\ \\__| (____/\\| )   ( || )   ( |\n           \\_______)   )_(   |/   \\__/(_______/|/     \\||/     \\|\n                                                                 \n\n                _______  ______  \n               (  ____ \\/ ___  \\ \n               | (    \\/\\/   \\  \\\n         _____ | (_____    ___) /\n        (_____)(_____  )  (___ ( \n                     ) |      ) \\\n               /\\____) |/\\___/  /\n               \\_______)\\______/ \n                                 \n```\n\nStreaming connect middleware for uploading files to Amazon S3.\n\nUses the awesome [AwsSum](https://github.com/appsattic/node-awssum/) for Amazon Web Services goodness.\n\n# How to get it #\n\n    $ npm -d install connect-stream-s3\n\n## Example ##\n\n```\nvar express = require('express');\nvar connectStreamS3 = require('connect-stream-s3');\nvar amazon = require('awssum').load('amazon/amazon');\n\n// give each uploaded file a unique name (up to you to make sure they are unique, this is an example)\nvar uniquifyObjectNames = function(req, res, next) {\n    for(var key in req.files) {\n        req.files[key].s3ObjectName = '' + parseInt(Math.random(100000));\n    }\n}\n\n// set up the connect-stream-s3 middleware\nvar s3StreamMiddleware = connectStreamS3({\n    accessKeyId     : process.env.ACCESS_KEY_ID,\n    secretAccessKey : process.env.SECRET_ACCESS_KEY,\n    awsAccountId    : process.env.AWS_ACCOUNT_ID,\n    region          : amazon.US_EAST_1,\n    bucketName      : 'your-bucket-name',\n    concurrency     : 2, // number of concurrent uploads to S3 (default: 3)\n});\n\n// create the app and paths\nvar app = module.exports = express.createServer();\n\napp.use(express.bodyParser());\n\napp.post('/upload', uniquifyObjectNames, s3StreamMiddleware, function(req, res, next) {\n    for(var key in req.files) {\n        console.log('File \"' + key + '\" uploaded as : ' + req.files[key].s3ObjectName);\n    }\n    res.redirect('/thanks');\n});\n```\n\n# How Does it Work #\n\n<code>connect-stream-s3</code> relies upon <code>express.bodyParser()</code> since it uses the <code>req.files</code>\nobject. This object already contains pointers to the files on disk and it is these files that are being used when\nuploading to Amazon S3.\n\n## Setting the Uploaded ObjectName for your Bucket ##\n\n<code>connect-stream-s3</code> looks for an attribute on each of the req.files objects called <code>s3ObjectName</code>\nwhich you *must* set in some middleware *before* the streaming middleware is called. Therefore the order goes (as the\nexample above shows):\n\n    express.bodyParser();\n    uniquifyObjectNames(); // sets s3ObjectName on each uploaded file\n    s3StreamMiddleware();\n\nIf you *don't* set s3ObjectName on each uploaded file, <code>connect-stream-s3</code> will complain and call next()\nwith an error, so make sure you set it to values appropriate to your application.\n\nNote: <code>connect-stream-s3</code> originally used the <code>req.files[field].name</code> field as a default but this\nreally makes no sense at all and has the side-effect that if someone uploads a file with a filename the same as a\nprevious one, it would get overwritten. I decided that having this as a default was bad, so you are forced to set\ns3ObjectName.\n\n# Reporting Issues, Bugs or Feature Requests #\n\nLet me know how you get on, whether you like it and if you encounter any problems:\n\n* https://github.com/appsattic/connect-stream-s3/issues\n\n# Author #\n\nWritten by [Andrew Chilton](http://www.chilts.org/blog/)\n\nCopyright 2012 [AppsAttic](http://www.appsattic.com/)\n\n# License #\n\nMIT. See LICENSE for more details.\n\n(Ends)\n",
  "_id": "connect-stream-s3@0.3.0",
  "dist": {
    "shasum": "f2f3d734c64aaffc2f1a2383c511e1c18e3c4cb0"
  },
  "_from": "connect-stream-s3"
}
